{
  "name": "node-graphql-backend",
  "version": "0.0.1",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com:alianca-hospitalar/node-graphql-backend.git"
  },
  "scripts": {
    "build": "serverless package",
    "start": "NODE_PATH=./ && nodemon localServer.js",
    "test": "NODE_ENV=test NODE_PATH=./ mocha \"Domain/**/*.test.js\" \"Infra/**/*.test.js\" --colors --require Tests/support.js --reporter spec",
    "test:watch": "yarn test -- --watch",
    "coverage": "nyc yarn test",
    "lint": "standard -v \"Domain/**/*.js\" \"Infra/**/*.js\" \"Features/**/*.js\" | snazzy",
    "lint:fix": "standard --fix \"Domain/**/*.js\" \"Infra/**/*.js\" \"Features/**/*.js\" | snazzy",
    "lint:watch": "watch -p \"+(Domain|Infra|Features)/**/*.js\" -c \"yarn lint\"",
    "db:migrate": "sequelize db:migrate",
    "db:migrate:undo": "sequelize db:migrate:undo"
  },
  "engines": {
    "node": "8.10.0",
    "npm": "5.6.0"
  },
  "dependencies": {
    "apollo-server": "^2.0.0",
    "apollo-server-lambda": "^2.0.0",
    "graphql": "^0.13.2",
    "joi": "^13.4.0",
    "pg": "^7.4.3",
    "sequelize": "^4.38.0",
    "sequelize-cli": "^4.0.0",
    "speck-entity": "alianca-hospitalar/speck",
    "speck-sequelize-repository": "alianca-hospitalar/speck-sequelize-repository",
    "winston": "^3.0.0"
  },
  "devDependencies": {
    "mocha": "^5.2.0",
    "nodemon": "^1.18.3",
    "nyc": "^12.0.2",
    "serverless": "^1.29.0",
    "snazzy": "^7.1.1",
    "standard": "^11.0.1",
    "watch-cli": "^0.2.3"
  },
  "nyc": {
    "statements": 95,
    "branches": 95,
    "functions": 95,
    "lines": 95,
    "check-coverage": true,
    "reporter": [
      "lcov",
      "text",
      "text-summary"
    ],
    "exclude": [
      "node_modules/**/*",
      "Domain/**/*.test.js",
      "Infra/**/*.test.js",
      "Features/**/*.js",
      "Fixtures/**/*.js",
      "Tests/**/*"
    ]
  },
  "standard": {
    "globals": [
      "describe",
      "context",
      "it",
      "after",
      "afterEach",
      "before",
      "beforeEach"
    ]
  }
}
